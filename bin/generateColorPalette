#!/bin/bash

##
#
# Generate a pallete of 8 unique colors for each
# image in youe Wallpaper directory
#
# Palettes are save in the pallete directory
#
##

. GlobalNeeds

GREEN="$(tput setaf 2)"
RESET="$(tput sgr0)"

for image in $(find $WALLPAPER_DIR -regex ".*\.\(jpg\|gif\|png\|jpeg\)")
do
    name=$(basename $image)
    #echo "Scanning $name..."
    if test ! -f "$PALETTE_DIR/$name.plt"; then
	convert $image +dither -colors 8 -unique-colors txt: | \
	    awk -F" " '{print $3}' | sed '/pixel/d' |  \
	    sort >> $PALETTE_DIR/$name.plt
    fi
    #echo -ne "${GREEN}Done${RESET}\n"
done

for PALETTE in $PALETTE_DIR/*.plt
do
    
    CC_DARK_TONE=$(cat $PALETTE | head -n1)
    CC_LIGHT_TONE=$(cat $PALETTE | tail -n1)

    DARK_R=$(echo "0x${CC_DARK_TONE:1:2}" )
    DARK_G=$(echo "0x${CC_DARK_TONE:3:2}" )
    DARK_B=$(echo "0x${CC_DARK_TONE:5:2}" )

    LIGHT_R=$(echo "0x${CC_LIGHT_TONE:1:2}" )
    LIGHT_G=$(echo "0x${CC_LIGHT_TONE:3:2}" )
    LIGHT_B=$(echo "0x${CC_LIGHT_TONE:5:2}" )

    CC_MID_TONE_1=$(cat $PALETTE | head -n2 | tail -n1 )
    CC_MID_TONE_2=$(cat $PALETTE | head -n3 | tail -n1 )
    CC_MID_TONE_3=$(cat $PALETTE | head -n4 | tail -n1 )
    CC_MID_TONE_4=$(cat $PALETTE | head -n5 | tail -n1 )
    CC_MID_TONE_5=$(cat $PALETTE | head -n6 | tail -n1 )
    CC_MID_TONE_6=$(cat $PALETTE | head -n7 | tail -n1 )

    
    echo $(basename $PALETTE)
    cat $PALETTE
    count=0
    for dark in $(cat $PALETTE | head -n -4)
    do
	count=$(($count + 1))
	dark_r=$(printf "%d" $(echo "0x${dark:1:2}"))
	dark_g=$(printf "%d" $(echo "0x${dark:3:2}" ))
	dark_b=$(printf "%d" $(echo "0x${dark:5:2}" ))

	DIFF_R=$dark_r
	DIFF_G=$dark_g
	DIFF_B=$dark_b	

	if [[ $DIFF_R -gt 200 ]]; then
	    DIFF_R=200
	fi

	if [[ $DIFF_G -gt 200 ]]; then
	    DIFF_G=200
	fi

	if [[ $DIFF_B -gt 200 ]]; then
	    DIFF_B=200
	fi
	
	NEW_COLOR=$(printf "#%00X%00X%00X" $DIFF_R $DIFF_G $DIFF_B)
	case $count in
	    1)
		CC_DARK_TONE=$NEW_COLOR
		;;
	    2)
		CC_MID_TONE_1=$NEW_COLOR		 
		;;
	    3)
		CC_MID_TONE_2=$NEW_COLOR
		;;
	    4)
		CC_MID_TONE_3=$NEW_COLOR
		;;
	esac


    done
    count=0
    for light in $(cat $PALETTE | sed '1,4d')
    do
	count=$(($count + 1))
	light_r=$(printf "%d" $(echo "0x${light:1:2}"))
	light_g=$(printf "%d" $(echo "0x${light:3:2}" ))
	light_b=$(printf "%d" $(echo "0x${light:5:2}" ))	    	    

	DIFF_R=$light_r
	DIFF_G=$light_g
	DIFF_B=$light_b

	if [[ $DIFF_R -gt 200 ]]; then
	    DIFF_R=200
	fi

	if [[ $DIFF_G -gt 200 ]]; then
	    DIFF_G=200
	fi

	if [[ $DIFF_B -gt 200 ]]; then
	    DIFF_B=200
	fi
	
	NEW_COLOR=$(printf "#%02X%02X%02X" $DIFF_R $DIFF_G $DIFF_B)
	case $count in
	    1)
		CC_MID_TONE_4=$NEW_COLOR		 
		;;
	    2)
		CC_MID_TONE_5=$NEW_COLOR		
		;;
	    3)
		CC_MID_TONE_6=$NEW_COLOR
		;;
	    4)
		CC_LIGHT_TONE=$NEW_COLOR
		;;
	esac
    done

    echo "$CC_DARK_TONE" > $PALETTE
    echo "$CC_MID_TONE_1" >> $PALETTE
    echo "$CC_MID_TONE_2" >> $PALETTE
    echo "$CC_MID_TONE_3" >> $PALETTE
    echo "$CC_MID_TONE_4" >> $PALETTE
    echo "$CC_MID_TONE_5" >> $PALETTE
    echo "$CC_MID_TONE_6" >> $PALETTE
    echo "$CC_LIGHT_TONE" >> $PALETTE
    echo "-------"
    cat $PALETTE
    echo "------"
done

